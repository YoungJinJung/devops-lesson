version: "3.8"
    
volumes:
  prometheus_data: {}

services:
  grafana:
    image: grafana/grafana
    ports:
      - 3000:3000
    volumes:
      - ./datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
      
  postgres:
    image: postgres
    ports:
      - 5432:5432
    volumes:
      - ./backup:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=client
      - POSTGRES_USER=testuser
      - POSTGRES_PASSWORD=testpass

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    ports:
      - 9187:9187
    environment:
      DATA_SOURCE_NAME: "postgresql://testuser:testpass@postgres:5432/client?sslmode=disable"
    links:
      - postgres
      - prometheus

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /:/host:ro
    command:
      - '--path.rootfs=/host'
    ports:
      - 9100:9100

  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - 8080:80
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./logs:/var/log/nginx

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter
    ports:
     - 9113:9113
    command:
      - -nginx.scrape-uri
      - http://nginx/metrics
    depends_on:
      - prometheus